/*
 *《莺啼序》 曲谱
 *作词:上官一羽
 *作曲：小牧
 *调教：耐心
 *曲绘：不明少年海
 *PV：废柴之琉璃酱，小苏，上官一羽
 *记谱:桃李醉春风
 *bilibili ID = av1745357
 *曲谱输入：离枝 
 */
 #include "pitchesNMN.h" //设置好路径
 //曲谱:
 int melody[]={
 d6,z1,z3,z2,z3,z3,z2,z2,z2,d5,z2,z3,0,//13
 d6,z1,z3,z3,z3,z2,z2,z2,d5,z5,z6,z5,z3,//13
 0, z3,z5,z6,z6,z6,z6,z5,0, z5,z2,z3,z3,z3,z5,z1,//16
 0, d6,z4,z4,z4,z4,z4,z4,z3,z1,z1,d6,0,//13 计时37s,修正

 d6,z1,z3,z2,z3,z3,z2,z2,z2,d5,z2,z3,z3,0,//14
 d6,z1,z3,z3,z3,z2,z2,z2,d5,z5,z6,z5,z3,0,//14
 z3,z5,z6,z6,z6,z6,z5,0, z5,z2,z3,z3,z3,z5,z1,0,//16
 d6,z4,z4,z4,z4,z4,z4,z3,z1,z1,d6,0,//12

 z3,z3,z5,z6,0, z6,z6,z6,z5,z6,z5,z5,z2,z3,0,//15
 z3,z3,z5,z6,0, z6,z6,z6,z5,z5,z6,z5,z3,0,//14
 z3,z3,z5,z6,z6,z6,z6,z5,0, z5,z2,z3,z3,z3,z2,z1,0,//17
 z1,d6,z3,z2,z2,z3,z5,z5,z1,d6,//10

 };

 //音符持续时间：4 = 四分之一音符，8 = 八分之一音符,此值为每秒内节拍的倒数，取值必须大于1，小于1时按1计算:
 int noteDurations[] = {
  4,4,2,4,2,4/3,2,4,4/3,2,2,1,1,
  4,4,1,2,4,4/3,2,2,2,2,4,2,1,
  2,4,4,1,2,4,4/3,2,2,4,4,2,2,2,4,1,
  2,2,2,1,4,4,2,2,2,4,2,1,1,

  4,4,2,4,2,2,2,2,2,2,2,4,1,1,
  4,4,1,2,4,4/3,2,2,2,2,4,4/3,1,2,
  4,4,1,2,4,4/3,2,2,4,4,2,2,2,4,1,2,
  4,2,2,2,4,4/3,2,2,4,4/3,1,2,
  
  2,4/3,4,1,2,4,4,2,2,2,2,2,4,1,2,
  2,4/3,4,1,2,4,4,2,2,2,4,2,1,2,
  2,4/3,4,1,4,4,2,2,2,4,4,2,2,2,4,1,2,
  4,4,2,2,4,4,4/3,4/3,1,1,
 };
 
 void setup() {
  // 增删节拍时，需要修改 thisNote 的数字:
  for (int thisNote = 0; thisNote < 167; thisNote++) {
 
    int noteDuration = 1000 / noteDurations[thisNote];
    tone(8, melody[thisNote], noteDuration);

    // 为了区分, 设置好最小时间.
    // 建议持续时间 + 30%，依照具体再修改，慢节奏时，延时适当调低一点:
    int pauseBetweenNotes = noteDuration * 1.1;
    delay(pauseBetweenNotes);
    // 停止:
    noTone(8);
  }
 }

void loop() {
  // 无需重复

}
